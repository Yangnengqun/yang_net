Net(
  (encoder): Encoder(
    (initial_block): DownsamplerBlock(
      (conv): Conv2d(3, 29, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (bn): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layers): ModuleList(
      (0): SS_nbt_module(
        (conv3x1_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (1): SS_nbt_module(
        (conv3x1_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (2): SS_nbt_module(
        (conv3x1_l): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (3): DownsamplerBlock(
        (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): SS_nbt_module(
        (conv3x1_l): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (5): SS_nbt_module(
        (conv3x1_l): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (6): DownsamplerBlock(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (7): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (8): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (9): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(5, 5), dilation=(5, 5), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (10): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(9, 9), dilation=(9, 9), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (11): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (12): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(5, 5), dilation=(5, 5), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (13): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(9, 9), dilation=(9, 9), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
      (14): SS_nbt_module(
        (conv3x1_l): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_l): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (bn_l): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv1x3_r): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x1_r): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (bn_r): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (gostconv): GhostModule(
          (primary_conv): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (cheap_operation): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(17, 17), dilation=(17, 17), groups=64, bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (relu): ReLU(inplace=True)
      )
    )
    (output_conv): Conv2d(128, 20, kernel_size=(1, 1), stride=(1, 1))
  )
  (decoder): Decoder(
    (apn): APN_Module(
      (branch1): Sequential(
        (0): AdaptiveAvgPool2d(output_size=1)
        (1): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(128, 20, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(20, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
      )
      (mid): Sequential(
        (0): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(128, 20, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(20, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
      )
      (down1): Conv2dBnRelu(
        (conv): Sequential(
          (0): Conv2d(128, 1, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
          (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (down2): Conv2dBnRelu(
        (conv): Sequential(
          (0): Conv2d(1, 1, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (down3): Sequential(
        (0): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(1, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
            (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (1): Conv2dBnRelu(
          (conv): Sequential(
            (0): Conv2d(1, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
      )
      (conv2): Conv2dBnRelu(
        (conv): Sequential(
          (0): Conv2d(1, 1, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
          (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (conv1): Conv2dBnRelu(
        (conv): Sequential(
          (0): Conv2d(1, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (1): BatchNorm2d(1, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
  )
)